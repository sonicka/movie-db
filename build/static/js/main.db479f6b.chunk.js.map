{"version":3,"sources":["constants.ts","components/menu/menu-styles.ts","components/menu/menu.tsx","components/carousel/carousel-styles.ts","components/carousel/carousel.tsx","components/loader/loader-styles.ts","components/loader/loader.tsx","components/error-message/error-message-styles.ts","components/error-message/error-message.tsx","fetchData.ts","actions/detail-actions.ts","actions/search-actions.ts","modules/overview/overview-styles.ts","modules/overview/overview-group.tsx","actions/data-actions.ts","modules/overview/overview.tsx","components/rating/rating-styles.ts","components/rating/rating.tsx","modules/detail/detail-styles.ts","modules/detail/detail-movie.tsx","modules/detail/detail-tv.tsx","modules/detail/detail.tsx","modules/detail/detail-video.tsx","modules/search/search-styles.ts","modules/search/search.tsx","App.tsx","reducers/data-reducer.ts","reducers/detail-reducer.ts","reducers/search-reducer.ts","store.ts","serviceWorker.ts","index.tsx"],"names":["Category","MovieGroups","apiKey","baseUrl","FETCH_BEGIN","FETCH_SUCCESS","FETCH_FAILURE","FETCH_DETAIL_BEGIN","FETCH_DETAIL_SUCCESS","FETCH_DETAIL_FAILURE","REMOVE_DETAIL","SEARCH_BEGIN","SEARCH_SUCCESS","SEARCH_FAILURE","CLEAR_SEARCH","movieGenres","id","name","useStyles","makeStyles","toolbar","backgroundColor","borderBottom","menuItem","width","color","fontSize","fontFamily","background","Menu","classes","AppBar","position","Toolbar","className","Button","onClick","navigate","fab","opacity","imageContainer","imageOverlay","height","top","right","bottom","left","transition","imageText","transform","Carousel","entities","category","search","useState","activeItemIndex","setActiveItemIndex","setWidth","useLayoutEffect","updateSize","window","innerWidth","addEventListener","removeEventListener","useWindowWidth","infiniteLoop","activePosition","chevronWidth","disableSwipe","alwaysShowChevrons","numberOfCards","Math","floor","slidesToScroll","outsideChevron","showSlither","firstAndLastGutter","requestToChangeActive","value","rightChevron","Fab","size","leftChevron","style","padding","map","o","key","src","poster_path","alt","title","to","state","media_type","loader","border","borderTop","borderRadius","margin","animationName","animation","Loader","error","fontStyle","notification","ErrorMessage","message","fetchPopular","axios","get","then","response","data","results","catch","fetchFromGenre","genre","genreWithId","find","g","fetchDetail","searchMovies","query","removeDetail","dispatch","type","clearSearch","groupWrapper","paddingBottom","noEntitiesWrapper","display","alignItems","justifyContent","overview","paddingTop","overviewTitle","loading","lineHeight","link","connect","ownProps","groupData","groupId","groupTitle","useEffect","dataType","a","payload","POPULAR_MOVIES","POPULAR_SERIES","FAMILY_MOVIES","DOCUMENTARIES","MOVIE","TV","Error","Overview","progressbarNumber","progressbarVotes","progressbarWrapper","Rating","voteAverage","voteCount","maxValue","styles","buildStyles","textColor","pathColor","textSize","strokeLinecap","wrapperWrapper","props","minHeight","backgroundImage","backgroundPosition","backgroundRepeat","backgroundAttachment","backgroundSize","wrapper","marginBottom","loaderWrapper","errorWrapper","content","boxShadow","contentMargin","overviewWrapper","detailsWrapper","detailItem","detailItemTitle","paddingRight","textAlign","fontWeight","detailItemText","paddingLeft","genresWrapper","moreInfo","moreInfoIcons","tagline","textShadow","buttonWrapper","bottomButton","videoWrapper","showVideo","MovieDetail","releaseDate","runtime","budget","revenue","genres","originalLanguage","homepage","imdbId","isLarge","useMediaQuery","formattedRevenue","toString","replace","formattedBudget","Grid","item","xs","container","md","href","target","rel","IconButton","Tooltip","TvDetail","episodeRuntime","firstAirDate","lastAirDate","numberOfEpisodes","numberOfSeasons","detail","detailData","titleId","location","setShownVideo","video","React","createRef","backdrop_path","stylesPropsWithBg","categorydd","formattedTitle","date","concat","substring","formattedDate","options","day","month","year","Date","toLocaleDateString","release_date","original_language","vote_average","vote_count","imdb_id","first_air_date","last_air_date","number_of_episodes","number_of_seasons","episode_run_time","ref","poster","controls","autoPlay","player","destroy","console","log","err","muxjs","shaka","Player","current","initPlayer","event","load","code","polyfill","installAll","isBrowserSupported","playVideo","requestFullscreen","enterFullscreen","searchBar","marginTop","sectionWrapper","searchRoot","searchInput","searchQuery","searchResults","isSmall","setSearchQuery","useDebouncedCallback","length","filter","r","debouncedSearch","handleChange","onChange","onCancelSearch","root","input","App","path","initialDataState","initialDetailState","initialSearchState","rootReducer","combineReducers","action","actions","store","createStore","composeWithDevTools","applyMiddleware","thunk","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db479f6b.chunk.js","sourcesContent":["// api constants\nexport const apiKey = \"f2725be090399a7f43df4c69b352f2f3\";\nexport const baseUrl = \"https://api.themoviedb.org\";\n\n// streams\nexport const manifestUri =\n  \"https://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8\";\n\n// actions\nexport const FETCH_BEGIN = \"FETCH_BEGIN\";\nexport const FETCH_SUCCESS = \"FETCH_SUCCESS\";\nexport const FETCH_FAILURE = \"FETCH_FAILURE\";\n\nexport const FETCH_DETAIL_BEGIN = \"FETCH_DETAIL_BEGIN\";\nexport const FETCH_DETAIL_SUCCESS = \"FETCH_DETAIL_SUCCESS\";\nexport const FETCH_DETAIL_FAILURE = \"FETCH_DETAIL_FAILURE\";\nexport const REMOVE_DETAIL = \"REMOVE_DETAIL\";\n\nexport const SEARCH_BEGIN = \"SEARCH_BEGIN\";\nexport const SEARCH_SUCCESS = \"SEARCH_SUCCESS\";\nexport const SEARCH_FAILURE = \"SEARCH_FAILURE\";\nexport const CLEAR_SEARCH = \"CLEAR_SEARCH\";\n\n// types\nexport type CategoryType = \"movie\" | \"tv\";\nexport type GenreType = \"Family\" | \"Documentary\";\nexport type DataType = MovieGroups;\n\n// enums\nexport enum Category {\n  MOVIE = \"movie\",\n  TV = \"tv\"\n}\n\nexport enum MovieGroups {\n  POPULAR_MOVIES = \"Popular_movies\",\n  POPULAR_SERIES = \"Popular_series\",\n  FAMILY_MOVIES = \"Family\",\n  DOCUMENTARIES = \"Documentary\"\n}\n\n// colors\nexport const primary = \"#343fa3\";\nexport const grey = \"#d6d6d6\";\n\n// movie genres\nexport const movieGenres = [\n  {\n    id: 28,\n    name: \"Action\"\n  },\n  {\n    id: 12,\n    name: \"Adventure\"\n  },\n  {\n    id: 16,\n    name: \"Animation\"\n  },\n  {\n    id: 35,\n    name: \"Comedy\"\n  },\n  {\n    id: 80,\n    name: \"Crime\"\n  },\n  {\n    id: 99,\n    name: \"Documentary\"\n  },\n  {\n    id: 18,\n    name: \"Drama\"\n  },\n  {\n    id: 10751,\n    name: \"Family\"\n  },\n  {\n    id: 14,\n    name: \"Fantasy\"\n  },\n  {\n    id: 36,\n    name: \"History\"\n  },\n  {\n    id: 27,\n    name: \"Horror\"\n  },\n  {\n    id: 10402,\n    name: \"Music\"\n  },\n  {\n    id: 9648,\n    name: \"Mystery\"\n  },\n  {\n    id: 10749,\n    name: \"Romance\"\n  },\n  {\n    id: 878,\n    name: \"Science Fiction\"\n  },\n  {\n    id: 10770,\n    name: \"TV Movie\"\n  },\n  {\n    id: 53,\n    name: \"Thriller\"\n  },\n  {\n    id: 10752,\n    name: \"War\"\n  },\n  {\n    id: 37,\n    name: \"Western\"\n  }\n];\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { primary, grey } from \"../../constants\";\n\n/** Styles for Menu component */\nexport const useStyles = makeStyles({\n  toolbar: {\n    backgroundColor: \"black\",\n    borderBottom: `2px solid ${primary}`\n  },\n  menuItem: {\n    width: \"50%\",\n    color: \"white\",\n    fontSize: \"18pt\",\n    fontFamily: \"Alatsi, Roboto, Helvetica Neue, sans-serif\",\n    \"&:hover\": {\n      background: \"none\",\n      color: grey\n    }\n  }\n});\n","import React from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { AppBar, Toolbar, Button } from \"@material-ui/core\";\nimport { useStyles } from \"./menu-styles\";\n\n/** Menu component shown on the top of all pages */\nconst Menu: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\">\n      <Toolbar className={classes.toolbar}>\n        <Button className={classes.menuItem} onClick={() => navigate(\"/\")}>\n          Movies\n        </Button>\n        <Button\n          className={classes.menuItem}\n          onClick={() => navigate(\"/search\")}\n        >\n          Search\n        </Button>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Menu;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { primary } from \"../../constants\";\n\nexport const useStyles = makeStyles({\n  fab: {\n    backgroundColor: primary,\n    color: \"white\",\n    fontFamily: \"Alatsi, Roboto, Helvetica Neue, sans-serif\",\n    opacity: \"0.8\"\n  },\n  imageContainer: {\n    position: \"relative\",\n    \"&:hover $imageOverlay\": {\n      opacity: 0.8\n    }\n  },\n  imageOverlay: {\n    position: \"absolute\",\n    height: \"100%\",\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    opacity: 0,\n    transition: \".5s ease\",\n    backgroundColor: \"black\"\n  },\n  imageText: {\n    color: \"white\",\n    fontFamily: \"Literata, Roboto, Helvetica Neue, sans-serif\",\n    fontSize: \"12pt\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\"\n  }\n});\n","import React, { useState, useLayoutEffect } from \"react\";\nimport { Link } from \"@reach/router\";\nimport { Fab } from \"@material-ui/core\";\nimport ItemsCarousel from \"react-items-carousel\";\nimport { useStyles } from \"./carousel-styles\";\nimport { CategoryType } from \"../../constants\";\n\n/** Props expected by Carousel component */\ninterface ICarousel {\n  entities: IEntity[];\n  category?: CategoryType;\n  search?: boolean;\n}\n\n/** Type of entities coming to Carousel via props */\ninterface IEntity {\n  id: string;\n  name?: string;\n  title?: string;\n  poster_path: string;\n  media_type: string;\n}\n\n/** Hook to get current window width */\nfunction useWindowWidth() {\n  const [width, setWidth] = useState(0);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setWidth(window.innerWidth);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return width;\n}\n\n/** Component showing lists of movies/tv shows */\nconst Carousel: React.FC<ICarousel> = ({\n  entities,\n  category,\n  search = false\n}) => {\n  const [activeItemIndex, setActiveItemIndex] = useState(0);\n  const width = useWindowWidth();\n  const classes = useStyles({ width: width });\n\n  return (\n    <ItemsCarousel\n      infiniteLoop={true}\n      activePosition=\"center\"\n      chevronWidth={60}\n      disableSwipe={false}\n      alwaysShowChevrons={false}\n      numberOfCards={\n        width < 400\n          ? Math.floor(window.innerWidth / 185)\n          : window.innerWidth / 185\n      }\n      slidesToScroll={1}\n      outsideChevron={false}\n      showSlither={false}\n      firstAndLastGutter={false}\n      activeItemIndex={activeItemIndex}\n      requestToChangeActive={(value: number) => setActiveItemIndex(value)}\n      rightChevron={\n        <Fab className={classes.fab} size=\"small\">\n          {\">\"}\n        </Fab>\n      }\n      leftChevron={\n        <Fab className={classes.fab} size=\"small\">\n          {\"<\"}\n        </Fab>\n      }\n      style={width < 400 ? { padding: \"0 50%\" } : {}}\n    >\n      {entities.map((o: IEntity) => (\n        <div key={o.id} className={classes.imageContainer}>\n          <img\n            src={\n              o.poster_path\n                ? `http://image.tmdb.org/t/p/w185${o.poster_path}`\n                : \"https://dummyimage.com/185x281/000/fff.jpg&text=Image+Unavailable\"\n            }\n            alt={category === \"movie\" ? o.title : o.name}\n          />\n          <Link\n            to={`/title/${o.id}`}\n            state={{ category: search ? o.media_type : category }}\n          >\n            <div className={classes.imageOverlay}>\n              {search && (\n                <div className={classes.imageText}>\n                  {o.media_type === \"movie\" ? o.title : o.name}\n                </div>\n              )}\n              {!search && (\n                <div className={classes.imageText}>\n                  {category === \"movie\" ? o.title : o.name}\n                </div>\n              )}\n            </div>\n          </Link>\n        </div>\n      ))}\n    </ItemsCarousel>\n  );\n};\n\nexport default Carousel;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { primary, grey } from \"../../constants\";\n\n/** Styles for loader component */\nexport const useStyles = makeStyles({\n  \"@keyframes spin\": {\n    \"0%\": {\n      transform: \"rotate(0deg)\"\n    },\n    \"100%\": {\n      transform: \"rotate(360deg)\"\n    }\n  },\n  loader: {\n    border: `6px solid ${primary}`,\n    borderTop: `6px solid ${grey}`,\n    borderRadius: \"50%\",\n    width: \"30px\",\n    height: \"30px\",\n    margin: \"0 auto\",\n    animationName: \"$spin\",\n    animation: \"spin 2s linear infinite\"\n  }\n});\n","import React from \"react\";\nimport { useStyles } from \"./loader-styles\";\n\n/** Component shown when loading data */\nconst Loader: React.FC = () => {\n  const classes = useStyles();\n\n  return <div className={classes.loader}></div>;\n};\n\nexport default Loader;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\n/** Styles for ErrorMessage component */\nexport const useStyles = makeStyles({\n  error: {\n    color: \"salmon\",\n    fontStyle: \"italic\",\n    fontFamily: \"Literata, Roboto, Helvetica Neue, sans-serif\"\n  },\n  notification: {\n    fontStyle: \"italic\",\n    fontFamily: \"Literata, Roboto, Helvetica Neue, sans-serif\"\n  }\n});\n","import React from \"react\";\nimport { useStyles } from \"./error-message-styles\";\n\n/** Props expected  by ErrorMessage component */\ninterface IErrorMessageProps {\n  message: string;\n  notification?: boolean;\n}\n\n/** Component showing error message */\nconst ErrorMessage: React.FC<IErrorMessageProps & any> = ({\n  message,\n  notification = false\n}) => {\n  const classes = useStyles();\n\n  return (\n    <h4 className={notification ? classes.notification : classes.error}>\n      {message}\n    </h4>\n  );\n};\n\nexport default ErrorMessage;\n","import axios from \"axios\";\nimport {\n  apiKey,\n  baseUrl,\n  CategoryType,\n  DataType,\n  movieGenres\n} from \"./constants\";\n\n/** Function to fetch popular movies/tv shows */\nexport const fetchPopular = (category: CategoryType): any => {\n  return axios\n    .get(`${baseUrl}/3/${category}/popular?api_key=${apiKey}`, {})\n    .then(function(response) {\n      return response.data.results;\n    })\n    .catch(function(error) {\n      throw error;\n    });\n};\n\n/** Function to fetch movies of given genre */\nexport const fetchFromGenre = (genre: DataType): any => {\n  const genreWithId = movieGenres.find((g: any) => {\n    return g.name === genre;\n  });\n\n  if (genreWithId) {\n    return axios\n      .get(\n        `${baseUrl}/3/discover/movie?api_key=${apiKey}&with_genres=${genreWithId.id}`\n      )\n      .then(function(response) {\n        return response.data.results;\n      })\n      .catch(function(error) {\n        throw error;\n      });\n  }\n};\n\n/** Function to fetch detail information about movie/tv show */\nexport const fetchDetail = (category: CategoryType, id: number): any => {\n  return axios\n    .get(\n      `${baseUrl}/3/${category}/${id}?api_key=${apiKey}&append_to_response=videos`\n    )\n    .then(function(response) {\n      return response.data;\n    })\n    .catch(function(error) {\n      throw error;\n    });\n};\n\n/** Function to search through movies/tv shows by given query */\nexport const searchMovies = (query: string): any => {\n  return axios\n    .get(\n      `${baseUrl}/3/search/multi?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`\n    )\n    .then(function(response) {\n      return response.data.results;\n    })\n    .catch(function(error) {\n      throw error;\n    });\n};\n","import { AnyAction, Dispatch } from \"redux\";\nimport { fetchDetail } from \"../fetchData\";\nimport {\n  FETCH_DETAIL_BEGIN,\n  FETCH_DETAIL_SUCCESS,\n  FETCH_DETAIL_FAILURE,\n  REMOVE_DETAIL,\n  CategoryType\n} from \"../constants\";\n\n/** Action that saves fetched detail of given movie/tv show to Redux store */\nexport function saveDetail(type: CategoryType, id: number) {\n  return async (dispatch: Dispatch<AnyAction>): Promise<void> => {\n    dispatch({\n      type: FETCH_DETAIL_BEGIN,\n      payload: {\n        id: id\n      }\n    });\n    try {\n      let response: any = await fetchDetail(type, id);\n\n      dispatch({\n        type: FETCH_DETAIL_SUCCESS,\n        payload: {\n          id: id,\n          categorydd: type,\n          data: response\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_DETAIL_FAILURE,\n        payload: {\n          id: id,\n          error: error.response\n        }\n      });\n    }\n  };\n}\n\n/** Action that clears detail data from Redux store */\nexport function removeDetail() {\n  return (dispatch: Dispatch<AnyAction>): void => {\n    dispatch({\n      type: REMOVE_DETAIL\n    });\n  };\n}\n","import { AnyAction, Dispatch } from \"redux\";\nimport { searchMovies } from \"../fetchData\";\nimport {\n  SEARCH_BEGIN,\n  SEARCH_SUCCESS,\n  SEARCH_FAILURE,\n  CLEAR_SEARCH\n} from \"../constants\";\n\n/** Action that sets search as running */\nexport function startSearch() {\n  return (dispatch: Dispatch<AnyAction>): void => {\n    dispatch({\n      type: SEARCH_BEGIN\n    });\n  };\n}\n\n/** Action that saves search query and data to Redux store */\nexport function search(query: string) {\n  return async (dispatch: Dispatch<AnyAction>): Promise<void> => {\n    if (query.length > 0) {\n      try {\n        let response: any = await searchMovies(query);\n        dispatch({\n          type: SEARCH_SUCCESS,\n          payload: {\n            query: query,\n            results: response.filter((r: any) => r.media_type !== \"person\")\n          }\n        });\n      } catch (error) {\n        dispatch({\n          type: SEARCH_FAILURE,\n          payload: {\n            error: error.response\n          }\n        });\n      }\n    }\n  };\n}\n\n/** Action that clears search data from Redux store */\nexport function clearSearch() {\n  return (dispatch: Dispatch<AnyAction>): void => {\n    dispatch({\n      type: CLEAR_SEARCH\n    });\n  };\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\n/** Styles for Overview and OverviewGroup components */\nexport const useStyles = makeStyles({\n  groupWrapper: {\n    paddingBottom: \"8px\"\n  },\n  noEntitiesWrapper: {\n    width: \"100%\",\n    height: \"280px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  overview: {\n    paddingTop: \"70px\"\n  },\n  overviewTitle: {\n    color: \"white\"\n  },\n  loading: {\n    height: \"338px\",\n    lineHeight: \"338px\"\n  },\n  link: {\n    width: \"100%\"\n  }\n});\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { get } from \"lodash\";\nimport Carousel from \"../../components/carousel/carousel\";\nimport Loader from \"../../components/loader/loader\";\nimport ErrorMessage from \"../../components/error-message/error-message\";\nimport { saveData } from \"../../actions/data-actions\";\nimport { removeDetail } from \"../../actions/detail-actions\";\nimport { clearSearch } from \"../../actions/search-actions\";\nimport { DataType, MovieGroups, CategoryType } from \"../../constants\";\nimport { useStyles } from \"./overview-styles\";\n\n/** Props expected by OverviewGroup component */\ninterface IOverviewGroupProps {\n  groupTitle: string;\n  groupId: DataType;\n  category: CategoryType;\n  search?: boolean;\n}\n\n/** Type of Overview group state */\ntype IOverviewGroupState = {\n  data: {\n    [value in MovieGroups]: IGroupData;\n  };\n};\n\n/** Type of data inside each movie group */\ninterface IGroupData {\n  loading: boolean;\n  error: any;\n  entities: any[];\n}\n\n/** Component representing one movie group on homepage */\nconst OverviewGroup: React.FC<IOverviewGroupProps & any> = ({\n  dispatch,\n  groupTitle,\n  groupId,\n  category,\n  groupData\n}) => {\n  const classes = useStyles();\n  const loading = get(groupData, \"loading\", false);\n  const entities = get(groupData, \"entities\", []);\n  const error = get(groupData, \"error\", false);\n\n  useEffect(() => {\n    dispatch(removeDetail());\n    dispatch(clearSearch());\n    dispatch(saveData(groupId));\n  }, [dispatch, groupId]);\n\n  return (\n    <div className={classes.groupWrapper}>\n      <h3 className={classes.overviewTitle}>{groupTitle}</h3>\n      {loading && (\n        <div className={classes.noEntitiesWrapper}>\n          <Loader />\n        </div>\n      )}\n      {!loading && !error && entities && (\n        <Carousel entities={entities} category={category} />\n      )}\n      {error && (\n        <div className={classes.noEntitiesWrapper}>\n          <ErrorMessage message=\"Error occurred while loading data!\" />\n        </div>\n      )}\n      {!loading && !error && !entities && (\n        <div className={classes.noEntitiesWrapper}></div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (\n  state: IOverviewGroupState,\n  ownProps: IOverviewGroupProps\n) => {\n  const groupData = get(state.data, `[${ownProps.groupId}]`, {});\n\n  return {\n    ...ownProps,\n    groupData\n  };\n};\n\nexport default connect(mapStateToProps)(OverviewGroup);\n","import { AnyAction, Dispatch } from \"redux\";\nimport { fetchPopular, fetchFromGenre } from \"../fetchData\";\nimport {\n  FETCH_BEGIN,\n  FETCH_SUCCESS,\n  FETCH_FAILURE,\n  Category,\n  MovieGroups,\n  DataType\n} from \"../constants\";\n\n/** Action that saves fetched data from given movie category to Redux store */\nexport function saveData(dataType: DataType) {\n  return async (dispatch: Dispatch<AnyAction>): Promise<void> => {\n    dispatch({\n      type: FETCH_BEGIN,\n      payload: {\n        id: dataType\n      }\n    });\n    try {\n      let response: any;\n      switch (dataType) {\n        case MovieGroups.POPULAR_MOVIES: {\n          response = await fetchPopular(Category.MOVIE);\n          break;\n        }\n        case MovieGroups.POPULAR_SERIES: {\n          response = await fetchPopular(Category.TV);\n          break;\n        }\n        case MovieGroups.FAMILY_MOVIES:\n        case MovieGroups.DOCUMENTARIES: {\n          response = await fetchFromGenre(dataType);\n          break;\n        }\n        default: {\n          throw new Error(\"Unknown category of movies requested!\");\n        }\n      }\n      dispatch({\n        type: FETCH_SUCCESS,\n        payload: {\n          id: dataType,\n          data: response\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: FETCH_FAILURE,\n        payload: {\n          id: dataType,\n          error: error\n        }\n      });\n    }\n  };\n}\n","import React from \"react\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport OverviewGroup from \"./overview-group\";\nimport { useStyles } from \"./overview-styles\";\nimport { MovieGroups } from \"../../constants\";\n\n/** Component consisting of all movie groups shown on homepage */\nconst Overview: React.FC<RouteComponentProps> = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.overview}>\n      <OverviewGroup\n        groupTitle=\"Popular Movies\"\n        groupId={MovieGroups.POPULAR_MOVIES}\n        category=\"movie\"\n      />\n      <OverviewGroup\n        groupTitle=\"Popular Series\"\n        groupId={MovieGroups.POPULAR_SERIES}\n        category=\"tv\"\n      />\n      <OverviewGroup\n        groupTitle=\"Family Movies\"\n        groupId={MovieGroups.FAMILY_MOVIES}\n        category=\"movie\"\n      />\n      <OverviewGroup\n        groupTitle=\"Documentaries\"\n        groupId={MovieGroups.DOCUMENTARIES}\n        category=\"movie\"\n      />\n    </div>\n  );\n};\n\nexport default Overview;\n","import { makeStyles } from \"@material-ui/core/styles\";\n\n/** Styles for Rating component */\nexport const useStyles = makeStyles({\n  progressbarNumber: {\n    fontSize: 18,\n    margin: \"0 auto\"\n  },\n  progressbarVotes: {\n    fontSize: 11,\n    margin: \"0 auto\",\n    display: \"none\"\n  },\n  progressbarWrapper: {\n    width: \"80px\",\n    margin: \"0 auto\",\n    paddingBottom: \"10px\",\n    \"&:hover $progressbarVotes\": {\n      display: \"block\"\n    },\n    \"&:hover $progressbarNumber\": {\n      display: \"none\"\n    }\n  }\n});\n","import React from \"react\";\nimport {\n  CircularProgressbarWithChildren,\n  buildStyles\n} from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { useStyles } from \"./rating-styles\";\nimport { primary } from \"../../constants\";\n\n/** Props expected by Rating component */\ninterface IRationgProps {\n  voteAverage: number;\n  voteCount: number;\n}\n\n/** Component showing movie/tv show rating */\nconst Rating: React.FC<IRationgProps> = ({ voteAverage, voteCount }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.progressbarWrapper}>\n      <CircularProgressbarWithChildren\n        maxValue={10}\n        value={voteAverage}\n        styles={buildStyles({\n          textColor: \"white\",\n          pathColor: primary,\n          textSize: \"12px\",\n          strokeLinecap: \"butt\"\n        })}\n      >\n        <div className={classes.progressbarNumber}>\n          <strong>{`${voteAverage}/10`}</strong>\n        </div>\n        <div className={classes.progressbarVotes}>{`${voteCount} votes`}</div>\n      </CircularProgressbarWithChildren>\n    </div>\n  );\n};\n\nexport default Rating;\n","import { makeStyles } from \"@material-ui/core/styles\";\nimport { primary } from \"../../constants\";\n\n/** Props expected by useStyles hook */\ninterface IWrapperStylesProps {\n  backgroundImage?: string;\n  contentMargin?: string;\n  showVideo?: boolean;\n}\n\n/** Styles for Detail page */\nexport const useStyles = makeStyles({\n  wrapperWrapper: (props: IWrapperStylesProps) => ({\n    height: \"100%\",\n    minHeight: \"100vh\",\n    width: \"100vw\",\n    display: \"flex\",\n    backgroundColor: \"black\",\n    backgroundImage: props.backgroundImage,\n    backgroundPosition: \"center center\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundAttachment: \"fixed\",\n    backgroundSize: \"cover\"\n  }),\n  wrapper: {\n    height: \"100%\",\n    width: \"100%\",\n    backgroundImage: \"linear-gradient(to top, transparent 15%, black 85%)\",\n    marginBottom: \"30px\"\n  },\n  loaderWrapper: {\n    height: \"100vh\",\n    width: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  errorWrapper: {\n    height: \"100vh\",\n    width: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  title: {\n    padding: \"80px 5px 20px 5px\",\n    color: \"white\",\n    width: \"100%\",\n    fontSize: \"16pt\",\n    fontFamily: \"Alatsi, Roboto, Helvetica Neue, sans-serif\"\n  },\n  content: (props: IWrapperStylesProps) => ({\n    background: \"rgba(255,255,255,0.6)\",\n    boxShadow: \"0px 0px 17px 1px black\",\n    borderRadius: \"4px\",\n    margin: `20px ${props.contentMargin} 20px ${props.contentMargin} `,\n    padding: \"20px\"\n  }),\n  overviewWrapper: {\n    height: \"100%\",\n    fontFamily: \"Literata, Roboto, Helvetica Neue, serif\"\n  },\n  detailsWrapper: {\n    height: \"100%\",\n    margin: \"20px 0 10px 0\"\n  },\n  detailItem: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingBottom: \"15px\"\n  },\n  detailItemTitle: {\n    paddingRight: \"5px\",\n    width: \"50%\",\n    textAlign: \"end\",\n    fontWeight: 600,\n    lineHeight: \"16px\",\n    fontFamily: \"Alatsi, Roboto, Helvetica Neue, sans-serif\"\n  },\n  detailItemText: {\n    paddingLeft: \"5px\",\n    width: \"50%\",\n    textAlign: \"start\",\n    lineHeight: \"16px\",\n    fontFamily: \"Literata, Roboto, Helvetica Neue, serif\"\n  },\n  genresWrapper: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    fontFamily: \"Alatsi, Roboto, Helvetica Neue, sans-serif\",\n    padding: \"16px 0\"\n  },\n  genre: {\n    background: \"black\",\n    boxShadow: \"0px 0px 1px 1px black\",\n    color: \"white\",\n    padding: \"5px\",\n    margin: \"5px\",\n    border: \"1px solid black\",\n    fontSize: \"10pt\"\n  },\n  moreInfo: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    justifyContent: \"center\",\n    height: \"100%\",\n    paddingTop: \"6px\",\n    fontWeight: 400,\n    fontFamily: \"Alatsi, Roboto, Helvetica Neue, sans-serif\"\n  },\n  moreInfoIcons: {\n    paddingTop: \"5px\"\n  },\n  tagline: {\n    color: \"white\",\n    textShadow: \"0 0 5px black\",\n    fontStyle: \"italic\",\n    fontSize: \"22pt\",\n    paddingBottom: \"50px\",\n    margin: 0,\n    fontFamily: \"Literata, Roboto, Helvetica Neue, serif\"\n  },\n  buttonWrapper: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"flex-end\"\n  },\n  bottomButton: {\n    position: \"fixed\",\n    bottom: 0,\n    width: \"100%\",\n    height: \"32px\",\n    fontFamily: \"Alatsi, Roboto, Helvetica Neue, sans-serif\",\n    backgroundColor: \"black\",\n    color: \"white\",\n    border: \"none\",\n    borderTop: `1px solid ${primary}`,\n    transition: \"0.5s\",\n    \"&:hover\": {\n      backgroundColor: primary,\n      color: \"white\"\n    }\n  },\n  videoWrapper: (props: IWrapperStylesProps) => ({\n    display: props.showVideo ? \"block\" : \"none\",\n    backgroundColor: \"black\",\n    height: \"calc(100vh - 32px)\"\n  })\n});\n","import React from \"react\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { Grid, IconButton, Tooltip, useMediaQuery } from \"@material-ui/core\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport Rating from \"../../components/rating/rating\";\nimport { useStyles } from \"./detail-styles\";\n\n/** Props expected by MovieDetail component */\ninterface IMovieDetailProps extends RouteComponentProps {\n  title: string;\n  overview: string;\n  releaseDate: string;\n  runtime: string;\n  budget: number;\n  revenue: number;\n  genres: string[];\n  originalLanguage: string;\n  voteAverage: number;\n  voteCount: number;\n  homepage: string;\n  imdbId: string;\n}\n\n/** Component that contains detail information about a movie */\nconst MovieDetail: React.FC<IMovieDetailProps> = ({\n  title = \"\",\n  overview = \"\",\n  releaseDate = \"\",\n  runtime = 0,\n  budget = 0,\n  revenue = 0,\n  genres = [],\n  originalLanguage = \"\",\n  voteAverage = 0,\n  voteCount = 0,\n  homepage = \"\",\n  imdbId = \"\"\n}) => {\n  const isLarge = useMediaQuery(\"(min-width:1150px)\");\n  const stylesProps = {\n    contentMargin: isLarge ? \"180px\" : \"30px\"\n  };\n  const classes = useStyles(stylesProps);\n\n  const formattedRevenue = `$${revenue\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\n  const formattedBudget = `$${budget\n    .toString()\n    .replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\n\n  return (\n    <>\n      <Grid item xs={12} className={classes.title}>\n        <h1>{title}</h1>\n        <Grid item xs={12}>\n          <Rating voteAverage={voteAverage} voteCount={voteCount} />\n        </Grid>\n      </Grid>\n      <Grid container className={classes.content}>\n        <Grid item xs={12} md={6}>\n          <div className={classes.overviewWrapper}>\n            <p>{overview}</p>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <div className={classes.detailsWrapper}>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Released on</div>\n              <div className={classes.detailItemText}>{releaseDate}</div>\n            </div>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Runtime</div>\n              <div className={classes.detailItemText}>\n                {`${runtime} minutes`}\n              </div>\n            </div>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Budget</div>\n              <div className={classes.detailItemText}>{formattedBudget}</div>\n            </div>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Revenue</div>\n              <div className={classes.detailItemText}>{formattedRevenue}</div>\n            </div>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Original language</div>\n              <div className={classes.detailItemText}>{originalLanguage}</div>\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <div className={classes.genresWrapper}>\n            {genres.map((genre: any) => (\n              <div key={genre.id} className={classes.genre}>\n                {genre.name}\n              </div>\n            ))}\n          </div>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <div className={classes.moreInfo}>More info:</div>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <div className={classes.moreInfoIcons}>\n            <a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">\n              <IconButton>\n                <Tooltip title=\"Website\">\n                  <LanguageIcon />\n                </Tooltip>\n              </IconButton>\n            </a>\n            {imdbId && (\n              <a\n                href={`https://www.imdb.com/title/${imdbId}`}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                <IconButton>\n                  <Tooltip title=\"IMDb\">\n                    <MovieIcon />\n                  </Tooltip>\n                </IconButton>\n              </a>\n            )}\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default MovieDetail;\n","import React from \"react\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { Grid, IconButton, Tooltip, useMediaQuery } from \"@material-ui/core\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport Rating from \"../../components/rating/rating\";\nimport { useStyles } from \"./detail-styles\";\n\n/** Props expected by TvDetail component */\ninterface ITvDetailProps extends RouteComponentProps {\n  title: string;\n  overview: string;\n  episodeRuntime: string;\n  firstAirDate: string;\n  lastAirDate: string;\n  numberOfEpisodes: number;\n  numberOfSeasons: number;\n  genres: string[];\n  originalLanguage: string;\n  voteAverage: number;\n  voteCount: number;\n  homepage: string;\n}\n\n/** Component that contains detail information about a TV show */\nconst TvDetail: React.FC<ITvDetailProps> = ({\n  title = \"\",\n  overview = \"\",\n  episodeRuntime = 0,\n  firstAirDate = \"\",\n  lastAirDate = \"\",\n  numberOfEpisodes = 0,\n  numberOfSeasons = 0,\n  genres = [],\n  originalLanguage = \"\",\n  voteAverage = 0,\n  voteCount = 0,\n  homepage = \"\"\n}) => {\n  const isLarge = useMediaQuery(\"(min-width:1150px)\");\n  const stylesProps = {\n    contentMargin: isLarge ? \"180px\" : \"30px\"\n  };\n  const classes = useStyles(stylesProps);\n\n  return (\n    <>\n      <Grid item xs={12} className={classes.title}>\n        <h1>{title}</h1>\n        <Grid item xs={12}>\n          <Rating voteAverage={voteAverage} voteCount={voteCount} />\n        </Grid>\n      </Grid>\n      <Grid container className={classes.content}>\n        <Grid item xs={12} md={6}>\n          <div className={classes.overviewWrapper}>\n            <p>{overview}</p>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <div className={classes.detailsWrapper}>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>First aired on</div>\n              <div className={classes.detailItemText}>{firstAirDate}</div>\n            </div>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Last aired on</div>\n              <div className={classes.detailItemText}>{lastAirDate}</div>\n            </div>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Episode runtime</div>\n              <div className={classes.detailItemText}>\n                {`${episodeRuntime} minutes`}\n              </div>\n            </div>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Number of episodes</div>\n              <div\n                className={classes.detailItemText}\n              >{`${numberOfEpisodes} in ${numberOfSeasons} ${\n                numberOfSeasons === 1 ? \"season\" : \"seasons\"\n              }`}</div>\n            </div>\n            <div className={classes.detailItem}>\n              <div className={classes.detailItemTitle}>Original language</div>\n              <div className={classes.detailItemText}>{originalLanguage}</div>\n            </div>\n          </div>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <div className={classes.genresWrapper}>\n            {genres.map((genre: any) => (\n              <div key={genre.id} className={classes.genre}>\n                {genre.name}\n              </div>\n            ))}\n          </div>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <div className={classes.moreInfo}>More info:</div>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <div className={classes.moreInfoIcons}>\n            <a href={homepage} target=\"_blank\" rel=\"noopener noreferrer\">\n              <IconButton>\n                <Tooltip title=\"Website\">\n                  <LanguageIcon />\n                </Tooltip>\n              </IconButton>\n            </a>\n          </div>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default TvDetail;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { Grid } from \"@material-ui/core\";\nimport { get } from \"lodash\";\nimport { saveDetail } from \"../../actions/detail-actions\";\nimport Loader from \"../../components/loader/loader\";\nimport ErrorMessage from \"../../components/error-message/error-message\";\nimport MovieDetail from \"./detail-movie\";\nimport TvDetail from \"./detail-tv\";\nimport { playVideo, enterFullscreen } from \"./detail-video\";\nimport { useStyles } from \"./detail-styles\";\nimport { Category } from \"../../constants\";\n\n/** Props expected by Detail component */\ninterface IDetailProps extends RouteComponentProps {\n  titleId: number;\n  dispatch: Dispatch<any>;\n  detail: {\n    title: string;\n    release_date: string;\n    tagline: string;\n    overview: string;\n    runtime: string;\n    budget: number;\n    revenue: number;\n    genres: any[];\n    backdrop_path: string;\n    videos: [];\n    name: string;\n    vote_average: number;\n    vote_count: number;\n    first_air_date: string;\n    last_air_date: string;\n    number_of_episodes: number;\n    number_of_seasons: number;\n    episode_run_time: string;\n    original_language: string;\n    homepage: string;\n    imdb_id: string;\n  };\n  loading: boolean;\n  error: any;\n}\n\n/** Component that holds details of given movie/tv show */\nconst Detail: React.FC<IDetailProps> = ({\n  titleId,\n  dispatch,\n  location,\n  detail,\n  loading,\n  error\n}) => {\n  // const videoUrl = `https://www.youtube.com/watch?v=${get(\n  //   detail.videos,\n  //   \"results[0].key\",\n  //   \"\"\n  // )}`;\n\n  const [showVideo, setShownVideo] = useState(false);\n  const video = React.createRef<HTMLVideoElement>();\n\n  const backgroundImage = detail.backdrop_path\n    ? `url(http://image.tmdb.org/t/p/w1280/${detail.backdrop_path})`\n    : null;\n  let stylesProps = { showVideo: showVideo };\n  let stylesPropsWithBg = {};\n  if (backgroundImage) {\n    stylesPropsWithBg = {\n      showVideo: showVideo,\n      backgroundImage: backgroundImage\n    };\n  }\n  const classes = useStyles(backgroundImage ? stylesPropsWithBg : stylesProps);\n\n  const category = get(location, \"state.category\", \"\");\n\n  useEffect(() => {\n    dispatch(saveDetail(category, titleId));\n  }, [dispatch, titleId, category]);\n\n  const formattedTitle = (title: string = \"\", date: string = \"\") =>\n    title.concat(\" (\", date.substring(0, 4), \")\");\n\n  const formattedDate = (date: string = \"\") => {\n    const options = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n    if (date) {\n      return new Date(date).toLocaleDateString(\"en-EN\", options);\n    }\n  };\n\n  return (\n    <div className={classes.wrapperWrapper}>\n      <Grid container className={classes.wrapper}>\n        {loading && (\n          <div className={classes.loaderWrapper}>\n            <Loader />\n          </div>\n        )}\n        {error && (\n          <div className={classes.errorWrapper}>\n            <ErrorMessage message=\"Error occurred while loading details!\" />\n          </div>\n        )}\n        {!error && !loading && !showVideo && category === Category.MOVIE && (\n          <>\n            <MovieDetail\n              title={formattedTitle(detail.title, detail.release_date)}\n              overview={detail.overview}\n              releaseDate={formattedDate(detail.release_date) || \"\"}\n              runtime={detail.runtime}\n              budget={detail.budget}\n              revenue={detail.revenue}\n              genres={detail.genres}\n              originalLanguage={detail.original_language}\n              voteAverage={detail.vote_average}\n              voteCount={detail.vote_count}\n              homepage={detail.homepage}\n              imdbId={detail.imdb_id}\n            />\n            {detail.tagline && (\n              <Grid item xs={12}>\n                <p className={classes.tagline}>{`'${detail.tagline}'`}</p>\n              </Grid>\n            )}\n          </>\n        )}\n        {!error && !loading && !showVideo && category === Category.TV && (\n          <TvDetail\n            title={formattedTitle(detail.name, detail.first_air_date)}\n            overview={detail.overview}\n            voteAverage={detail.vote_average}\n            voteCount={detail.vote_count}\n            firstAirDate={formattedDate(detail.first_air_date) || \"\"}\n            lastAirDate={formattedDate(detail.last_air_date) || \"\"}\n            numberOfEpisodes={detail.number_of_episodes}\n            numberOfSeasons={detail.number_of_seasons}\n            episodeRuntime={detail.episode_run_time}\n            originalLanguage={detail.original_language}\n            genres={detail.genres}\n            homepage={detail.homepage}\n          />\n        )}\n        <div className={classes.videoWrapper}>\n          <video\n            ref={video}\n            width=\"100%\"\n            height=\"100%\"\n            poster={`http://image.tmdb.org/t/p/w1280/${detail.backdrop_path}`}\n            controls\n            autoPlay\n            // src={videoUrl}\n          />\n        </div>\n        <Grid item xs={12}>\n          <div className={classes.buttonWrapper}>\n            <button\n              className={classes.bottomButton}\n              onClick={() => {\n                if (showVideo) {\n                  setShownVideo(false);\n                  (window as any).player\n                    .destroy()\n                    .then(() => console.log(\"Player stopped.\"))\n                    .catch((err: any) =>\n                      console.log(`Unable to stop player. ${err})`)\n                    );\n                } else {\n                  setShownVideo(true);\n                  playVideo(video);\n                  enterFullscreen(video);\n                }\n              }}\n            >\n              {showVideo ? \"BACK TO DETAIL\" : \"PLAY MOVIE\"}\n            </button>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\ninterface IMovieFields {\n  title: string;\n  tagline: string;\n  vote_average: number;\n  vote_count: number;\n  overview: string;\n  release_date: string;\n  runtime: number;\n  budget: string;\n  revenue: string;\n  original_language: string;\n  genres: any;\n  homepage: string;\n  imdb_id: string;\n  backdrop_path: string;\n  videos: { results: any[] };\n}\n\ninterface ITvShowFields {\n  name: string;\n  vote_average: number;\n  vote_count: number;\n  overview: string;\n  first_air_date: string;\n  last_air_date: string;\n  number_of_episodes: number;\n  number_of_seasons: number;\n  episode_run_time: number;\n  original_language: string;\n  genres: any;\n  homepage: string;\n  backdrop_path: string;\n  videos: { results: any[] };\n}\n\ninterface Istate {\n  detail: {\n    detailData: IMovieFields | ITvShowFields;\n    loading: boolean;\n    error: any;\n  };\n}\n\nconst mapStateToProps = (state: Istate, ownProps: any) => {\n  return {\n    ...ownProps,\n    detail: state.detail.detailData,\n    loading: state.detail.loading,\n    error: state.detail.error\n  };\n};\n\nexport default connect(mapStateToProps)(Detail);\n","import { RefObject } from \"react\";\nimport shaka from \"shaka-player\";\nimport muxjs from \"mux.js\";\nimport { manifestUri } from \"../../constants\";\n\n/** Function that creates video player usingg Shaka player */\nexport const playVideo = (video: RefObject<HTMLVideoElement>) => {\n  (window as any).muxjs = muxjs;\n\n  // Construct a Player to wrap around the video element\n  let player = new shaka.Player(video.current);\n\n  // Attach player to the window to make it easy to access\n  (window as any).player = player;\n\n  // Initialize video player after checking browser support\n  const initPlayer = async () => {\n    // Listen for error events.\n    if (player) {\n      player.addEventListener(\"error\", function(event: any) {\n        console.log(event);\n      });\n\n      // Try to load a manifest.\n      await player.load(manifestUri).catch((error: any) => {\n        console.error(\"Error code\", error.code, \"object\", error);\n      });\n    }\n  };\n\n  // Install built-in polyfills to patch browser incompatibilities.\n  shaka.polyfill.installAll();\n\n  // Check if the browser supports the basic APIs Shaka needs.\n  if (shaka.Player.isBrowserSupported()) {\n    initPlayer();\n  } else {\n    console.error(\"Browser not supported!\");\n  }\n};\n\n/** Function to play video on fullscreen */\nexport const enterFullscreen = (video: RefObject<HTMLVideoElement>) => {\n  try {\n    if (video.current) {\n      video.current.requestFullscreen();\n    }\n  } catch (error) {\n    console.log(`Fullscreen cannot be toggled. ${error}`);\n  }\n};\n","import { makeStyles } from \"@material-ui/core/styles\";\n\n/** Props expected by useStyles hook */\ninterface ISearchStylesProps {\n  marginTop: string;\n}\n\n/** Styles for Search component */\nexport const useStyles = makeStyles({\n  searchBar: (props: ISearchStylesProps) => ({\n    margin: \"0 auto\",\n    width: \"80%\",\n    marginTop: props.marginTop,\n    backgroundColor: \"black\"\n  }),\n  sectionWrapper: {\n    paddingTop: \"100px\",\n    color: \"white\"\n  },\n  searchRoot: {\n    borderBottom: \"2px solid white\",\n    borderRadius: 0\n  },\n  searchInput: {\n    color: \"white\"\n  }\n});\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"@reach/router\";\nimport { useDebouncedCallback } from \"use-debounce\";\nimport { useMediaQuery } from \"@material-ui/core\";\nimport SearchBar from \"material-ui-search-bar\";\nimport Carousel from \"../../components/carousel/carousel\";\nimport Loader from \"../../components/loader/loader\";\nimport ErrorMessage from \"../../components/error-message/error-message\";\nimport { startSearch, search, clearSearch } from \"../../actions/search-actions\";\nimport { removeDetail } from \"../../actions/detail-actions\";\nimport { useStyles } from \"./search-styles\";\n\n/** Props expected  by Search component */\ninterface ISearchProps extends RouteComponentProps {\n  searchQuery: string;\n  searchResults: any[];\n}\n\n/** Types of search data from Redux store */\ninterface ISearchState extends RouteComponentProps {\n  search: {\n    query: string;\n    results: any[];\n    loading: boolean;\n    error: any;\n  };\n}\n\n/** Component for searching through movies/tv shows */\nconst Search: React.FC<ISearchProps & any> = ({\n  searchQuery,\n  searchResults,\n  loading,\n  error,\n  dispatch\n}) => {\n  const isSmall = useMediaQuery(\"(max-width:576px)\");\n  const classes = useStyles({ marginTop: isSmall ? \"150px\" : \"200px\" });\n  const [query, setSearchQuery] = useState(searchQuery);\n\n  useEffect(() => {\n    dispatch(removeDetail());\n  }, [dispatch]);\n\n  const [debouncedSearch] = useDebouncedCallback(value => {\n    dispatch(search(value));\n  }, 1000);\n\n  const handleChange = (value: string) => {\n    dispatch(startSearch());\n    setSearchQuery(value);\n    debouncedSearch(value);\n    if (value.length === 0) {\n      dispatch(clearSearch());\n    }\n  };\n\n  const handleCancel = () => {\n    setSearchQuery(\"\");\n    dispatch(clearSearch());\n  };\n\n  return (\n    <div>\n      <SearchBar\n        onChange={value => handleChange(value)}\n        value={query}\n        onCancelSearch={handleCancel}\n        className={classes.searchBar}\n        classes={{ root: classes.searchRoot, input: classes.searchInput }}\n      />\n      <div className={classes.sectionWrapper}>\n        {loading && (\n          <div className={classes.sectionWrapper}>\n            <Loader />\n          </div>\n        )}\n        {searchResults.length === 0 && searchQuery && (\n          <div className={classes.sectionWrapper}>\n            <ErrorMessage message=\"Nothing found\" notification />\n          </div>\n        )}\n        {!loading && !error && <Carousel search entities={searchResults} />}\n        {error && <ErrorMessage message=\"Error occurred while loading data!\" />}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: ISearchState) => {\n  return {\n    searchQuery: state.search.query,\n    searchResults: state.search.results,\n    loading: state.search.loading,\n    error: state.search.error\n  };\n};\n\nexport default connect(mapStateToProps)(Search);\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport Menu from \"./components/menu/menu\";\nimport Overview from \"./modules/overview/overview\";\nimport Detail from \"./modules/detail/detail\";\nimport Search from \"./modules/search/search\";\nimport \"./App.css\";\n\n/** App component containing all routes within the application  */\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Router>\n        <Overview path=\"/\" />\n        <Detail path=\"/title/:titleId\" />\n        <Search path=\"/search\" />\n      </Router>\n    </div>\n  );\n};\n\nexport default App;\n","import * as actions from \"../constants\";\n\n/** Type of Data state */\ninterface IDataState {\n  [c: string]: IEntityData;\n}\n\n/** Type of entities saved in Data state */\ninterface IEntityData {\n  loading: boolean;\n  error?: any;\n  id: string;\n  entities?: {};\n}\n\n/** Initial state of Data */\nconst initialDataState: { [c: string]: IEntityData } = {};\n\n/** Reducer for Data actions */\nexport const dataReducer = (\n  state: IDataState = initialDataState,\n  action: any\n) => {\n  switch (action.type) {\n    case actions.FETCH_BEGIN:\n      return {\n        ...state,\n        [action.payload.id]: {\n          loading: true\n        }\n      };\n    case actions.FETCH_SUCCESS:\n      return {\n        ...state,\n        [action.payload.id]: {\n          entities: action.payload.data,\n          loading: false\n        }\n      };\n    case actions.FETCH_FAILURE:\n      return {\n        ...state,\n        [action.payload.id]: {\n          error: action.payload.error,\n          loading: false\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import * as actions from \"../constants\";\n\n/** Type of Detail state */\ninterface IDetailState {\n  loading: boolean;\n  error: any;\n  detailData: {};\n}\n\n/** Initial state of Detail */\nconst initialDetailState = {\n  loading: false,\n  error: null,\n  detailData: {}\n};\n\n/** Reducer for Detail actions */\nexport const detailReducer = (\n  state: IDetailState = initialDetailState,\n  action: any\n) => {\n  switch (action.type) {\n    case actions.FETCH_DETAIL_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actions.FETCH_DETAIL_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        category: action.payload.category,\n        detailData: action.payload.data\n      };\n    case actions.FETCH_DETAIL_FAILURE:\n      return {\n        ...state,\n        error: action.payload.error,\n        loading: false\n      };\n    case actions.REMOVE_DETAIL:\n      return initialDetailState;\n    default:\n      return state;\n  }\n};\n","import * as actions from \"../constants\";\n\n/** Type of Search state */\ninterface ISearchState {\n  query: string;\n  loading: boolean;\n  error: any;\n  results: any[];\n}\n\n/** Initial state of Search */\nconst initialSearchState = {\n  query: \"\",\n  loading: false,\n  error: null,\n  results: []\n};\n\n/** Reducer for Search actions */\nexport const searchReducer = (\n  state: ISearchState = initialSearchState,\n  action: any\n) => {\n  switch (action.type) {\n    case actions.SEARCH_BEGIN:\n      return {\n        ...state,\n        loading: true,\n        error: null\n      };\n    case actions.SEARCH_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        query: action.payload.query,\n        results: action.payload.results\n      };\n    case actions.SEARCH_FAILURE:\n      return {\n        ...state,\n        loading: false,\n        error: action.payload.error\n      };\n    case actions.CLEAR_SEARCH:\n      return initialSearchState;\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport { dataReducer } from \"./reducers/data-reducer\";\nimport { detailReducer } from \"./reducers/detail-reducer\";\nimport { searchReducer } from \"./reducers/search-reducer\";\n\n/** Combining all reducers to one */\nexport const rootReducer = combineReducers({\n  data: dataReducer,\n  detail: detailReducer,\n  search: searchReducer\n});\n\n/** Redux store initialization */\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n/** Index page */\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}